type LogLevel int                                                                // 日志级别
const
    OriginAddr LogLevel    = iota+1                                              // 客户端。
    Authenticate                                                                 // 认证
    Host                                                                         // 访问的Host地址
    URI                                                                          // 路径
    Request                                                                      // 请求
    Response                                                                     // 响应
    Error                                                                        // 错误
)

type Proxy struct {                                                      // 代理
    LinkPosterior   bool                                                             // 支持连接后面的，如：http://192.168.2.31/http://www.baidu.com/
    DataBufioSize   int                                                              // 缓冲区大小
    Auth            func(username, password string) bool                             // 认证
    Addr        string                                                               // 代理IP地址
    Server      http.Server                                                          // 服务器
    DialContext func(ctx context.Context, network, address string) (net.Conn, error) // 拨号
    ErrorLog    *log.Logger                                                          // 日志
    ErrorLogLevel LogLevel                                                           // 日志级别
}
    func (p *Proxy) ServeHTTP(rw http.ResponseWriter, req *http.Request)         // 处理
    func (p *Proxy) ListenAndServe() error                                       // 监听
    func (p *Proxy) Serve(l net.Listener) error                                  // 监听
    func (p *Proxy) Close() error                                                // 关闭代理

